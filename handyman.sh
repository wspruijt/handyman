# useful sh/zsh commands

# --- Add public key te remote server ---
# Stolen from: http://www.howtogeek.com/wiki/Add_Public_SSH_Key_to_Remote_Server_in_a_Single_Command
# Make sure you have generated a key using ssh-keygen -t rsa
cat ~/.ssh/id_rsa.pub | ssh user@hostname 'cat >> .ssh/authorized_keys'

# --- Fix UTF8 encoding ---
# Fix the annoying 'Convert to UTF-8'-notice while intalling gems
# You can add this to your .bashrc or .zshrc
export LC_CTYPE="UTF-8" 

# --- Recursively delete .svn directories ---
# Recursively delete all .svn directories under a specific directory
find . -name .svn -exec 'rm -rf {}\;'

# --- Recursively delete ._ files generated by OS X Finder  ---
# Recursively delete all .- directories under a specific directory
find . -name "._*" -exec 'rm -rf {}\;'

# --- Remove all trailing whitespace from files ---
find . -type f -name '*.rb' -exec sed --in-place 's/[[:space:]]\+$//' {} \+

# --- Useful ls  ----
# List (l) all (a) files and directories, order by modification date (t), reversed (r)
# Mnemonic: ls -lat(e)r
ls -latr
alias ls='ls -latr' # Add to your .bashrc/.zshrc to make the options default

# --- Convert files ERB to HAML ---
# Make sure you installed the gems: haml,hpricot, ruby_parser
for i in `find app/views/ -name '*.erb'` ; do html2haml -e $i ${i%erb}haml ; done
# And remove erb..
for i in `find app/views/ -name '*.erb'` ; do rm $i ; done

# --- Git ----
# Undo last commit (not yet pushed)
git reset --soft HEAD~1

# Configure that a branch - other than master - will be pushed to heroku
# http://stackoverflow.com/questions/2401254/git-push-current-branch-to-a-remote-with-heroku
# Example git config remote.heroku.push feature-awesome-sauce:master
git config remote.[remoteRepositoryName].push [localBranchName]:[remoteBranchName]

# --- Ruby ---
# Replace old <1.8 Hash notations in all *.rb files
# Stolen from: http://devign.me/convert-ruby-hash-syntax-to-1-9/
Dir['**/*.rb'].each { |f|
  s = open(f).read
  awesome_rx = /(?<!return)(?<!:)(?<!\w)(\s+):(\w+)\s*=>/
  count = s.scan(awesome_rx).length
  next if count.zero?
  s.gsub!(awesome_rx, '\1\2:')
  puts "#{count} replacements @ #{f}"
  open(f, 'w') { |b| b << s } }

# --- Github ---
# Generate a Github oauth token to use private gem s in your Gemfile
curl -u 'username' -d '{"scopes":["repo"],"note":"Help example"}' https://api.github.com/authorizations
# Enter host password for user 'username': [type password]
#
# Response:
#
# {
#   "scopes": [
#     "repo"
#   ],
#   "token": "your_token",
#   "app": {
#     "url": "http://developer.github.com/v3/oauth/#oauth-authorizations-api",
#     "name": "Help example (API)"
#   },
#   "url": "https://api.github.com/authorizations/123456",
#   "note": "Help example",
#   "note_url": null,
#   "id": 123456,
# }
#
# In your Gemfile:
# gem 'awesomegem', git: your_token@:x-oauth-basic@github.com/username/repos
